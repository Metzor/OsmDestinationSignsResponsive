<!DOCTYPE html>
<html lang="en">
<head>
 <title>OSM Destination Signs</title>
 <link rel="stylesheet" type="text/css" href="../code/style.css">
 <script src="../code/scripts.js" type="text/javascript"></script>
 <meta  charset="UTF-8"/>

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.1.0/dist/leaflet.css"
  integrity="sha512-wcw6ts8Anuw10Mzh9Ytw4pylW8+NAD4ch3lqm9lzAsTxg0GFeJgoAtxuCLREZSC5lUXdVyo/7yfsqFjQ4S+aKw=="
  crossorigin=""/>
<script src="https://unpkg.com/leaflet@1.1.0/dist/leaflet.js"
  integrity="sha512-mNqn2Wg7tSToJhvHcqfzLMU6J4mkOImSPTxVZAdo+lcPlk+GhZmYgACEe0x35K7YzW1zJ7XyJV/TT1MrdXvMcA=="
  crossorigin=""></script>
<!--  <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.css" /> -->
 <link rel="stylesheet" type="text/css" href="../example/website.css">
<!--  <script src="http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.js"></script> -->
 <script src="../example/leaflet-layerjson.js"></script>
 <script src="../example/leaflet-permalink.js"></script>
 <base target="_blank">
</head>
<body class="mappage">
<div id="header">
<h1>Destination Signs</h1>
<p><strong>This tool shows the content of relations with "type=destination_sign".</strong>
<br>Please enter an Id of an intersection node or a guidepost - or do it the simple way and select a marker from the map.
<br>Click on the arrow to get to the corresponding OSM object.
<br>The code is available on <a href="https://github.com/mueschel/OsmDestinationSigns">Github</a>.
<div class="config">
<h3>Configuration</h3>
<div><form action="" onsubmit="getsign(document.getElementsByName('nodeid')[0].value); return false;">
  <label title="Id of an intersection or guidepost node">Node Id:
    <input type="text" name="nodeid"></label>
  <br><label title="Some Examples">Some (interesting) examples:
    <select name="nodeid" onChange="getsign(this.value);">
      <option value="3731895314">3731895314 - bi-lingual
      <option value="1938162531">1938162531
      <option value="4313151794">4313151794 - node as 'to'
      <option value="3719751885">3719751885 - node as 'to', in middle of way
      <option value="3721184276">3721184276 - ref from relation of ways
      <option value="2399730302">2399730302 - with symbol and colour
      <option value="3033139388">3033139388 - bicycle with colour but missing intersection
      <option value="2400684815">2400684815 - list of destinations and times
      <option value="3669231450">3669231450 - coloured arrows
      <option value="3740138783">3740138783
      <option value="3908107497">3908107497 - an awful lot of entries
      <option value="3700303286">3700303286 - with image and operator
      <option value="3906804369">3906804369 - with Mapillary
      <option value="1670509673">1670509673 - from way, no intersection
      <option value="3314100013">3314100013 - at a motorway
      <option value="3733676910">3733676910 - way part of a named route
      <option value="521744">521744 - destination:lanes would be better
      <option value="3904774546">3904774546 - long relation names
      <option value="521648">521648 - need to find right to way
      <option value="3718993777">3718993777 - 2 'to' mapping error
      <option value="4015458129">4015458129 - in a roundabout
      <option value="33606838">33606838 - ambiguous
      <option value="275664964">275664964 - with various from's
      <option value="4554236964">4554236964 - with many from; time and distance
    </select></label>
    <div><input type="checkbox" name="namedroutes" checked="checked"> Add names of routes</input>
    <br><input type="checkbox" name="fromarrow" checked="checked"> Show hollow arrows as seen from 'from' way</input>
    <br><a id="permanode" href="">Link to this node</a>
</form>
</div>
</div>
</div>
<div style="margin-bottom:50px;margin-top:10px;clear:both;width:420px;height:1px;border-bottom:1px solid black;">
<p><div id="map"></div>
<div id="container">&nbsp;</div>


</body>
<script type="text/javascript">
var map = L.map('map').setView([46.72539, 11.42286], 12);

L.tileLayer('http://tile.openstreetmap.org/{z}/{x}/{y}.png',
  { attribution: 'Map &copy; <a href="https://www.openstreetmap.org">OpenStreetMap</a>' }).addTo(map);

L.layerJSON({
  url: 'http://overpass-api.de/api/interpreter?data=[out:json];relation["type"="destination_sign"]({lat1},{lon1},{lat2},{lon2})->.a;node(r.a:"sign")->.b;.b out;rel(bn.b)["type"="destination_sign"]->.c;(.a - .c)->.d;node(r.d:"intersection")->.e;.e out;',
  propertyItems: 'elements',
  propertyTitle: 'tags.name',
  propertyLoc: ['lat','lon'],
  minShift: 100,
  updateOutBounds: true,
  buildIcon: function(data, title) {
    return new L.Icon({
      iconUrl:'../code/marker-icon.png',
      iconSize: new L.Point(25, 41),
      iconAnchor: new L.Point(12, 41),
      popupAnchor: new L.Point(0, -41)
    })
  },
  buildPopup: function(data, marker) {
    marker.on('click',function(d) {getsign(d.target.options.id);});
    o = 'Waypost <a href="https://osm.org/node/'+data.id+'">'+data.id+'</a><br>';
    for (var k in data.tags) {
      if (data.tags.hasOwnProperty(k)) {
        o += k+" = "+data.tags[k]+"<br>";
        }
      }
    return o;
    }
  })

  .addTo(map);
  var marker;

map.addControl(new L.Control.Permalink({text: 'Permalink'}));

var hash = (location.hash ||'').replace(/^#/,'').split('&');
var namedroutes = false;
var fromarrow = false;
for(i=0; i<hash.length; i++ ){
  var t = hash[i].split('=');
  if (t[0]=='node') {
    getsign(t[1]);
    }
  if (t[0]=="namedroutes"){
    namedroutes = true;
    }
  if (t[0]=="fromarrow"){
    fromarrow = true;
    }
  }
  if (hash[0]){
    document.getElementsByName('namedroutes')[0].checked = namedroutes;
    document.getElementsByName('fromarrow')[0].checked = fromarrow;
    }


</script>

</html>
